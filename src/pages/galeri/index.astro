---
import BaseLayout from '../../layouts/BaseLayout.astro';

let galleries = [];
let sidebarGalleries = [];
let allImages = [];

const API_URL = "https://sys.yathim.or.id/api";
const STORAGE_URL = "https://sys.yathim.or.id/storage";

try {
  const galleriesResponse = await fetch(`${API_URL}/gallery`);
  if (galleriesResponse.ok) {
    const galleriesData = await galleriesResponse.json();
    galleries = galleriesData.data?.data || galleriesData.data || [];

    allImages = galleries.flatMap((gallery: any) =>
      gallery.images?.map((image: string) => ({
        src: `${STORAGE_URL}/${image}`,
        alt: gallery.name || 'Gallery Image',
        category: gallery.name?.toLowerCase() || 'all',
        galleryName: gallery.name,
        description: gallery.description
      })) || []
    );
  }
} catch (error) {
  console.error("Error fetching galleries:", error);
}

try {
  const sidebarResponse = await fetch(`${API_URL}/gallery?sidebar=true`);
  if (sidebarResponse.ok) {
    const sidebarData = await sidebarResponse.json();
    sidebarGalleries = sidebarData.data || [];
  }
} catch (error) {
  console.error("Error fetching sidebar galleries:", error);
}
---

<BaseLayout 
  title="Galeri - Yayasan Taman Harapan Insan Mulia"
  description="Lihat dokumentasi kegiatan dan program yayasan kami dalam membantu yatim dan dhuafa."
>
  <section class="bg-gradient-to-br from-primary-600 to-primary-800 text-white py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-3xl md:text-5xl font-bold mb-6">Galeri</h1>
      <p class="max-w-3xl mx-auto text-lg md:text-xl text-primary-100">
        Lihat dokumentasi kegiatan dan program yayasan kami dalam membantu yatim dan dhuafa.
      </p>
    </div>
  </section>

  <section class="py-16">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">Dokumentasi Kegiatan</h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Saksikan momen-momen berharga dari berbagai kegiatan dan program yayasan
        </p>
      </div>
      
      <div class="flex flex-wrap justify-center gap-3 mb-12">
        <button
          class="filter-btn active px-6 py-2 rounded-full bg-primary-600 text-white font-medium transition-colors"
          data-filter="all"
        >
          Semua
        </button>
        {sidebarGalleries.map((gallery: any) => (
          <button
            class="filter-btn px-6 py-2 rounded-full bg-gray-200 text-gray-700 hover:bg-primary-600 hover:text-white font-medium transition-colors"
            data-filter={gallery.name?.toLowerCase()}
          >
            {gallery.name}
          </button>
        ))}
      </div>
      
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6" id="gallery-grid">
        {allImages.length > 0 ? (
          allImages.map((image: any, index: number) => (
            <div
              class="gallery-item group cursor-pointer relative"
              data-category={image.category}
              data-index={index}
            >
              <div class="aspect-square bg-gray-200 rounded-lg overflow-hidden relative">
                <img
                  src={image.src}
                  alt={image.alt}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />

                <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center">
                  <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"/>
                    </svg>
                  </div>
                </div>
              </div>

            </div>
          ))
        ) : (
          <div class="col-span-full text-center py-12">
            <div class="text-gray-400 mb-4">
              <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
            </div>
            <p class="text-gray-500 text-lg">Galeri sedang dimuat...</p>
          </div>
        )}
      </div>
    </div>
  </section>

  {galleries.length > 0 && (
    <section class="py-16 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">Kategori Galeri</h2>
          <p class="text-gray-600">Berbagai kategori dokumentasi kegiatan yayasan</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {galleries.slice(0, 6).map((gallery: any, index: number) => {
            const firstImage = gallery.images?.[0];
            return (
              <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                <div class="aspect-video bg-gray-200">
                  {firstImage ? (
                    <img
                      src={`${STORAGE_URL}/${firstImage}`}
                      alt={gallery.name || `Featured ${index + 1}`}
                      class="w-full h-full object-cover"
                      loading="lazy"
                    />
                  ) : (
                    <div class="w-full h-full flex items-center justify-center text-gray-400">
                      <svg class="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                    </div>
                  )}
                </div>
                <div class="p-4">
                  <h3 class="font-semibold text-lg text-gray-900 mb-2">{gallery.name}</h3>
                  <p class="text-primary-600 text-sm mt-2">{gallery.images?.length || 0} foto</p>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </section>
  )}
</BaseLayout>

<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden items-center justify-center p-4">
  <div class="relative max-w-4xl max-h-full">
    <button 
      id="close-lightbox" 
      class="absolute top-4 right-4 text-white hover:text-gray-300 z-10"
      aria-label="Tutup"
    >
      <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>
    <img id="lightbox-image" src="" alt="" class="max-w-full max-h-full object-contain">
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterBtns = document.querySelectorAll('.filter-btn');
    const galleryItems = document.querySelectorAll('.gallery-item');

    filterBtns.forEach(btn => {
      btn.addEventListener('click', async () => {
        const filter = btn.getAttribute('data-filter');

        filterBtns.forEach(b => {
          b.classList.remove('active', 'bg-primary-600', 'text-white');
          b.classList.add('bg-gray-200', 'text-gray-700');
        });
        btn.classList.add('active', 'bg-primary-600', 'text-white');
        btn.classList.remove('bg-gray-200', 'text-gray-700');

        if (filter === 'all') {
          galleryItems.forEach(item => {
            const htmlItem = item as HTMLElement;
            htmlItem.style.display = 'block';
          });
        } else if (filter) {
          galleryItems.forEach(item => {
            const category = item.getAttribute('data-category');
            const htmlItem = item as HTMLElement;
            if (category === filter) {
              htmlItem.style.display = 'block';
            } else {
              htmlItem.style.display = 'none';
            }
          });
        }
      });
    });

    const lightbox = document.getElementById('lightbox') as HTMLElement | null;
    const lightboxImage = document.getElementById('lightbox-image') as HTMLImageElement | null;
    const closeLightbox = document.getElementById('close-lightbox') as HTMLButtonElement | null;

    if (lightbox && lightboxImage) {
      galleryItems.forEach(item => {
        item.addEventListener('click', () => {
          const img = item.querySelector('img');
          if (img && lightboxImage) {
            lightboxImage.src = img.src;
            lightboxImage.alt = img.alt;
            lightbox.classList.remove('hidden');
            lightbox.classList.add('flex');
            document.body.style.overflow = 'hidden';
          }
        });
      });

      const closeLightboxModal = () => {
        lightbox.classList.add('hidden');
        lightbox.classList.remove('flex');
        document.body.style.overflow = 'auto';
      };

      closeLightbox?.addEventListener('click', closeLightboxModal);

      lightbox.addEventListener('click', (e) => {
        if (e.target === lightbox) {
          closeLightboxModal();
        }
      });

      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !lightbox.classList.contains('hidden')) {
          closeLightboxModal();
        }
      });
    }
  });
</script>
