---
import BaseLayout from "../../layouts/BaseLayout.astro";
import ShareButtons from "../../components/ShareButtons.astro";

let categories = [
  { id: 1, name: "Pendidikan" },
  { id: 2, name: "Sosial" },
  { id: 3, name: "Kesehatan" },
  { id: 4, name: "Bencana Alam" },
  { id: 5, name: "Lingkungan" },
];

const API_URL = "https://sys.yathim.or.id/api";
const STORAGE_URL = "https://sys.yathim.or.id/storage";
const SITE = "https://yathim.or.id";

let initialArticles: any[] = [];
let initialPagination: any = {
  current_page: 1,
  last_page: 1,
  total: 0,
  from: 0,
  to: 0
};

try {
  const res = await fetch(`${API_URL}/article?page=1`);
  const json = await res.json();
  initialArticles = json.data?.data || [];
  initialPagination = {
    current_page: json.data?.current_page || 1,
    last_page: json.data?.last_page || 1,
    per_page: json.data?.per_page || 6,
    total: json.data?.total || 0,
    from: json.data?.from || 0,
    to: json.data?.to || 0,
  };
} catch (err) {
  console.error("Gagal mengambil data artikel:", err);
}

const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString("id-ID", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

const truncateText = (text: string, maxLength: number = 150) => {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength) + "...";
};
---

<BaseLayout
  title="Artikel - Yayasan Taman Harapan Insan Mulia"
  description="Baca artikel terbaru tentang kegiatan dan program yayasan kami untuk membantu yatim dan dhuafa."
  image="/images/image-yathim.jpeg"
  keywords="artikel, berita, kegiatan, program, yayasan, yatim, dhuafa, sosial, pendidikan, kesehatan"
  type="website"
>
  <section class="bg-gradient-to-br from-primary-600 to-primary-800 text-white py-16">
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-3xl md:text-5xl font-bold mb-6">Artikel</h1>
      <p class="max-w-3xl mx-auto text-lg md:text-xl text-primary-100">Baca artikel terbaru tentang kegiatan dan program yayasan kami untuk membantu yatim dan dhuafa.</p>
    </div>
  </section>

  <section class="py-8 bg-gray-50">
    <div class="container mx-auto px-4">
      <div class="bg-white rounded-lg shadow-sm border p-6">
        <div class="space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <!-- Category Filter -->
            <div>
              <label for="categoryFilter" class="block text-sm font-medium text-gray-700 mb-2">Kategori</label>
              <select id="categoryFilter" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
                <option value="">Semua Kategori</option>
                {
                  categories.map((category) => (
                    <option value={category.id}>
                      {category.name}
                    </option>
                  ))
                }
              </select>
            </div>

            <!-- Sort Filter -->
            <div>
              <label for="sortFilter" class="block text-sm font-medium text-gray-700 mb-2">Urutkan</label>
              <select id="sortFilter" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
                <option value="newest">Terbaru</option>
                <option value="oldest">Terlama</option>
              </select>
            </div>
          </div>

          <!-- Filter Actions -->
          <div class="flex flex-col sm:flex-row gap-3 pt-4">
            <button id="applyFilter" type="button" class="bg-primary-600 hover:bg-primary-700 text-white font-medium px-6 py-2 rounded-md transition-colors flex items-center justify-center">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"/>
              </svg>
              Terapkan Filter
            </button>
            <button id="resetFilter" type="button" class="bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium px-6 py-2 rounded-md transition-colors flex items-center justify-center">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
              </svg>
              Reset Filter
            </button>
          </div>
        </div>

        <!-- Results Info -->
        <div id="resultsInfo" class="mt-4 pt-4 border-t border-gray-200">
          <p class="text-sm text-gray-600">
            <span id="resultsText">Menampilkan {initialPagination.from} - {initialPagination.to} dari {initialPagination.total} artikel</span>
          </p>
        </div>
      </div>
    </div>
  </section>

  <section class="py-16">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">Semua Artikel</h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">Ikuti perkembangan terbaru kegiatan dan program yayasan kami</p>
      </div>

      <div id="loadingState" class="hidden text-center py-12">
        <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
        <p class="mt-2 text-gray-600">Memuat artikel...</p>
      </div>

      <div id="articlesGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          initialArticles.map((article: any) => (
            <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow h-full">
              <div class="relative">
                <ShareButtons
                  url={`${SITE}/artikel/${article.slug}`}
                  title={`${article.title} - Yayasan Taman Harapan Insan Mulia`}
                  description={article.excerpt.slice(0, 100) || `Baca artikel ${article.title} di website resmi Yayasan Taman Harapan Insan Mulia`}
                  image={article.image ? `${STORAGE_URL}/${article.image}` : ""}
                  size="sm"
                  className="absolute top-2 right-2 z-10"
                />

                <div class="aspect-video bg-gray-200">
                  {article.image ? (
                    <img src={`${STORAGE_URL}/${article.image}`} alt={article.title} class="w-full h-full object-center object-cover" loading="lazy" />
                  ) : (
                    <div class="w-full h-full flex items-center justify-center text-gray-400">
                      <svg class="w-16 h-16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                      </svg>
                    </div>
                  )}
                </div>
              </div>

              <div class="p-6">
                <div class="flex items-center text-sm text-gray-500 mb-2">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  {formatDate(article.created_at)}
                </div>

                <h3 class="font-semibold text-xl mb-3 text-gray-900 line-clamp-2">{article.title}</h3>

                {article.excerpt && (
                  <p class="text-gray-600 mb-4 line-clamp-3">{truncateText(article.excerpt)}</p>
                )}

                <a href={`/artikel/${article.slug}`} class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium transition-colors">
                  Baca Selengkapnya
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </a>
              </div>
            </article>
          ))
        }
      </div>

      <div id="paginationContainer" class="mt-12 flex justify-center">
        {initialPagination.last_page > 1 && (
          <nav class="flex items-center space-x-2" aria-label="Pagination">
            {initialPagination.current_page > 1 ? (
              <button onclick="goToPage(1)" class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                </svg>
              </button>
            ) : (
              <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                </svg>
              </span>
            )}

            {Array.from({ length: initialPagination.last_page }, (_, i) => i + 1).map((page) => {
              const isActive = page === initialPagination.current_page;
              return (
                <button onclick={`goToPage(${page})`} class={`px-3 py-2 text-sm font-medium rounded-md transition-colors ${
                  isActive 
                    ? 'bg-primary-600 text-white border border-primary-600' 
                    : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 hover:text-gray-900'
                }`} aria-current={isActive ? 'page' : undefined}>
                  {page}
                </button>
              );
            })}

            {initialPagination.current_page < initialPagination.last_page ? (
              <button onclick={`goToPage(${initialPagination.current_page + 1})`} class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </button>
            ) : (
              <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </span>
            )}
          </nav>
        )}
      </div>

      <div id="paginationInfo" class="mt-6 text-center">
        <p class="text-sm text-gray-600">
          Halaman <span id="currentPageText">{initialPagination.current_page}</span> dari <span id="totalPagesText">{initialPagination.last_page}</span> 
          (<span id="totalItemsText">{initialPagination.total}</span> total artikel)
        </p>
      </div>
    </div>
  </section>

  <script>
    let currentPage = 1;
    let currentCategory = "";
    let currentSort = "newest";
    let paginationData: any = {};

    const categoryFilter = document.getElementById("categoryFilter") as HTMLSelectElement;
    const sortFilter = document.getElementById("sortFilter") as HTMLSelectElement;
    const applyFilterBtn = document.getElementById("applyFilter") as HTMLButtonElement;
    const resetFilterBtn = document.getElementById("resetFilter") as HTMLButtonElement;
    const articlesGrid = document.getElementById("articlesGrid") as HTMLElement;
    const loadingState = document.getElementById("loadingState") as HTMLElement;
    const paginationContainer = document.getElementById("paginationContainer") as HTMLElement;
    const resultsText = document.getElementById("resultsText") as HTMLElement;
    const currentPageText = document.getElementById("currentPageText") as HTMLElement;
    const totalPagesText = document.getElementById("totalPagesText") as HTMLElement;
    const totalItemsText = document.getElementById("totalItemsText") as HTMLElement;

    function readUrlParams() {
      const urlParams = new URLSearchParams(window.location.search);
      currentPage = parseInt(urlParams.get("page") || "1");
      currentCategory = urlParams.get("category") || "";
      currentSort = urlParams.get("sort") || "newest";

      if (categoryFilter) categoryFilter.value = currentCategory;
      if (sortFilter) sortFilter.value = currentSort;
    }

    function updateUrl() {
      const params = new URLSearchParams();
      if (currentPage > 1) params.set("page", currentPage.toString());
      if (currentCategory) params.set("category", currentCategory);
      if (currentSort !== "newest") params.set("sort", currentSort);

      const newUrl = window.location.pathname + (params.toString() ? "?" + params.toString() : "");
      window.history.pushState({}, "", newUrl);
    }

    function formatDate(dateString: string) {
      const date = new Date(dateString);
      return date.toLocaleDateString("id-ID", {
        year: "numeric",
        month: "long",
        day: "numeric",
      });
    }

    function truncateText(text: string, maxLength: number = 150) {
      if (text.length <= maxLength) return text;
      return text.substring(0, maxLength) + "...";
    }

    async function fetchArticles() {
      try {
        if (loadingState) loadingState.classList.remove("hidden");
        if (articlesGrid) articlesGrid.classList.add("opacity-50");

        let apiUrl = `https://sys.yathim.or.id/api/article?page=${currentPage}`;

        if (currentCategory) {
          apiUrl += `&category_id=${currentCategory}`;
        }

        if (currentSort === 'oldest') {
          apiUrl += `&sort=oldest`;
        } else {
          apiUrl += `&sort=newest`;
        }

        const response = await fetch(apiUrl);
        const data = await response.json();

        if (data.success && data.data) {
          renderArticles(data.data.data || []);
          paginationData = data.data;

          renderPagination();
          updateResultsInfo();
        } else {
          console.error("API response error:", data);
        }
      } catch (error) {
        console.error("Error fetching articles:", error);
      } finally {
        if (loadingState) loadingState.classList.add("hidden");
        if (articlesGrid) articlesGrid.classList.remove("opacity-50");
      }
    }

    function escapeHtml(text: string) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML.replace(/"/g, '&quot;').replace(/'/g, '&#39;');
    }

    function renderArticles(articles: any[]) {
      if (!articlesGrid) return;

      if (!articles || articles.length === 0) {
        articlesGrid.innerHTML = `
          <div class="col-span-full text-center py-12">
            <div class="text-gray-400 mb-4">
              <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
              </svg>
            </div>
            <p class="text-gray-500 text-lg">Tidak ada artikel yang ditemukan</p>
          </div>
        `;
        return;
      }

      articlesGrid.innerHTML = articles.map((article: any) => `
        <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow h-full">
          <div class="relative">
            <!-- Share Button -->
            <div class="absolute top-2 right-2 z-10">
              <div class="relative">
                <button class="share-toggle bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full px-3 py-2 text-sm font-medium flex items-center gap-2 transition-colors" data-url="https://yathim.or.id/artikel/${article.slug}" data-title="${escapeHtml(article.title)} - Yayasan Taman Harapan Insan Mulia" data-description="${escapeHtml(article.excerpt || 'Baca artikel ' + article.title + ' di website resmi Yayasan Taman Harapan Insan Mulia')}" data-image="${article.image ? 'https://sys.yathim.or.id/storage/' + article.image : ''}"
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                  </svg>
                  <span>Bagikan</span>
                </button>
                <div class="share-menu hidden absolute top-full right-0 mt-2 bg-white rounded-lg shadow-lg border min-w-48 z-50">
                  <a href="#" class="share-facebook flex items-center gap-3 px-3 py-2 hover:bg-gray-100 rounded-md transition-colors">
                    <div class="w-5 h-5 bg-blue-600 rounded flex items-center justify-center">
                      <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                      </svg>
                    </div>
                    <span class="text-sm font-medium">Facebook</span>
                  </a>
                  <a href="#" class="share-twitter flex items-center gap-3 px-3 py-2 hover:bg-gray-100 rounded-md transition-colors">
                    <div class="w-5 h-5 bg-blue-400 rounded flex items-center justify-center">
                      <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                      </svg>
                    </div>
                    <span class="text-sm font-medium">Twitter</span>
                  </a>
                  <a href="#" class="share-whatsapp flex items-center gap-3 px-3 py-2 hover:bg-gray-100 rounded-md transition-colors">
                    <div class="w-5 h-5 bg-green-500 rounded flex items-center justify-center">
                      <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
                      </svg>
                    </div>
                    <span class="text-sm font-medium">WhatsApp</span>
                  </a>
                  <a href="#" class="share-telegram flex items-center gap-3 px-3 py-2 hover:bg-gray-100 rounded-md transition-colors">
                    <div class="w-5 h-5 bg-blue-500 rounded flex items-center justify-center">
                      <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                      </svg>
                    </div>
                    <span class="text-sm font-medium">Telegram</span>
                  </a>
                  <button class="share-copy flex items-center gap-3 px-3 py-2 hover:bg-gray-100 rounded-md transition-colors w-full text-left">
                    <div class="w-5 h-5 bg-gray-600 rounded flex items-center justify-center">
                      <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
                      </svg>
                    </div>
                    <span class="text-sm font-medium">Salin Link</span>
                  </button>
                </div>
              </div>
            </div>

            <div class="aspect-video bg-gray-200">
              ${article.image ?
                `<img src="https://sys.yathim.or.id/storage/${article.image}" alt="${article.title}" class="w-full h-full object-center object-cover" loading="lazy" />` :
                `<div class="w-full h-full flex items-center justify-center text-gray-400">
                  <svg class="w-16 h-16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                  </svg>
                </div>`
              }
            </div>
          </div>

          <div class="p-6">
            <div class="flex items-center text-sm text-gray-500 mb-2">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              ${formatDate(article.created_at)}
            </div>

            <h3 class="font-semibold text-xl mb-3 text-gray-900 line-clamp-2">${article.title}</h3>

            ${article.excerpt ? `
              <p class="text-gray-600 mb-4 line-clamp-3">${truncateText(article.excerpt)}</p>
            ` : ''}

            <a href="/artikel/${article.slug}" class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium transition-colors">
              Baca Selengkapnya
              <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          </div>
        </article>
      `).join('');

      initializeShareButtons();
    }

    function initializeShareButtons() {
      // Remove existing event listeners to avoid duplicates
      document.removeEventListener('click', handleShareButtonClick);
      document.addEventListener('click', handleShareButtonClick);
    }

    function handleShareButtonClick(e: Event) {
      const target = e.target as HTMLElement;

      // Handle share toggle button
      if (target.closest('.share-toggle')) {
        e.preventDefault();
        const button = target.closest('.share-toggle') as HTMLElement;
        const menu = button.parentElement?.querySelector('.share-menu') as HTMLElement;
        if (menu) {
          menu.classList.toggle('hidden');
        }
        return;
      }

      // Handle Facebook share
      if (target.closest('.share-facebook')) {
        e.preventDefault();
        const button = target.closest('.relative')?.querySelector('.share-toggle') as HTMLElement;
        if (button) {
          const url = button.dataset.url || '';
          window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank', 'width=600,height=400');
        }
        return;
      }

      // Handle Twitter share
      if (target.closest('.share-twitter')) {
        e.preventDefault();
        const button = target.closest('.relative')?.querySelector('.share-toggle') as HTMLElement;
        if (button) {
          const url = button.dataset.url || '';
          const title = button.dataset.title || '';
          window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(title)}`, '_blank', 'width=600,height=400');
        }
        return;
      }

      // Handle WhatsApp share
      if (target.closest('.share-whatsapp')) {
        e.preventDefault();
        const button = target.closest('.relative')?.querySelector('.share-toggle') as HTMLElement;
        if (button) {
          const url = button.dataset.url || '';
          const title = button.dataset.title || '';
          window.open(`https://wa.me/?text=${encodeURIComponent(title + ' ' + url)}`, '_blank');
        }
        return;
      }

      // Handle Telegram share
      if (target.closest('.share-telegram')) {
        e.preventDefault();
        const button = target.closest('.relative')?.querySelector('.share-toggle') as HTMLElement;
        if (button) {
          const url = button.dataset.url || '';
          const title = button.dataset.title || '';
          window.open(`https://t.me/share/url?url=${encodeURIComponent(url)}&text=${encodeURIComponent(title)}`, '_blank');
        }
        return;
      }

      // Handle copy link
      if (target.closest('.share-copy')) {
        e.preventDefault();
        const shareButton = target.closest('.relative')?.querySelector('.share-toggle') as HTMLElement;
        if (shareButton) {
          const url = shareButton.dataset.url || '';

          if (navigator.clipboard) {
            navigator.clipboard.writeText(url).then(() => {
              alert('Link berhasil disalin!');
            });
          } else {
            // Fallback for older browsers
            const textArea = document.createElement('textarea');
            textArea.value = url;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            alert('Link berhasil disalin!');
          }
        }
        return;
      }

      // Close share menus when clicking outside
      if (!target.closest('.share-toggle') && !target.closest('.share-menu')) {
        document.querySelectorAll('.share-menu').forEach(menu => {
          menu.classList.add('hidden');
        });
      }
    }

    function renderPagination() {
      if (!paginationContainer) return;
      if (!paginationData || !paginationData.last_page) {
        console.log("No pagination data available");
        paginationContainer.innerHTML = "";
        return;
      }

      // Always show pagination if there's data, even for single page
      if (paginationData.last_page <= 1) {
        paginationContainer.innerHTML = `
          <nav class="flex items-center space-x-2" aria-label="Pagination">
            <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
              </svg>
            </span>
            <span class="px-3 py-2 text-sm font-medium bg-primary-600 text-white border border-primary-600 rounded-md">1</span>
            <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            </span>
          </nav>
        `;
        return;
      }

      let paginationHTML = '<nav class="flex items-center space-x-2" aria-label="Pagination">';

      // Previous button
      if (paginationData.current_page > 1) {
        paginationHTML += `
          <button onclick="goToPage(${paginationData.current_page - 1})" class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
            </svg>
          </button>
        `;
      } else {
        paginationHTML += `
          <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
            </svg>
          </span>
        `;
      }

      // Page numbers
      for (let i = 1; i <= paginationData.last_page; i++) {
        const isActive = i === paginationData.current_page;
        paginationHTML += `
          <button onclick="goToPage(${i})" class="px-3 py-2 text-sm font-medium rounded-md transition-colors ${
            isActive
              ? 'bg-primary-600 text-white border border-primary-600'
              : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50 hover:text-gray-900'
          }" ${isActive ? 'aria-current="page"' : ''}>
            ${i}
          </button>
        `;
      }

      // Next button
      if (paginationData.current_page < paginationData.last_page) {
        paginationHTML += `
          <button onclick="goToPage(${paginationData.current_page + 1})" class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 hover:text-gray-700 transition-colors">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </button>
        `;
      } else {
        paginationHTML += `
          <span class="px-3 py-2 text-sm font-medium text-gray-300 bg-gray-100 border border-gray-300 rounded-md cursor-not-allowed">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
            </svg>
          </span>
        `;
      }

      paginationHTML += '</nav>';
      paginationContainer.innerHTML = paginationHTML;
    }

    function updateResultsInfo() {
      if (paginationData && resultsText && currentPageText && totalPagesText && totalItemsText) {
        resultsText.textContent = `Menampilkan ${paginationData.from || 0} - ${paginationData.to || 0} dari ${paginationData.total || 0} artikel`;
        currentPageText.textContent = paginationData.current_page || 1;
        totalPagesText.textContent = paginationData.last_page || 1;
        totalItemsText.textContent = paginationData.total || 0;
      }
    }

    (window as any).goToPage = function (page: number) {
      currentPage = page;
      updateUrl();
      fetchArticles();
    };

    if (applyFilterBtn) {
      applyFilterBtn.addEventListener("click", () => {
        if (categoryFilter && sortFilter) {
          currentCategory = categoryFilter.value;
          currentSort = sortFilter.value;
          currentPage = 1; // Reset to first page
          updateUrl();
          fetchArticles();
        }
      });
    }

    if (resetFilterBtn) {
      resetFilterBtn.addEventListener("click", () => {
        currentCategory = "";
        currentSort = "newest";
        currentPage = 1;
        if (categoryFilter) categoryFilter.value = "";
        if (sortFilter) sortFilter.value = "newest";
        updateUrl();
        fetchArticles();
      });
    }

    document.addEventListener("DOMContentLoaded", () => {
      readUrlParams();

      initializeShareButtons();

      fetchArticles();
    });

    window.addEventListener("popstate", () => {
      readUrlParams();
      fetchArticles();
    });
  </script>
</BaseLayout>
